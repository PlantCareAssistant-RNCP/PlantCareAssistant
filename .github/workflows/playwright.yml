name: Playwright Tests

on:
  push:
    branches: [dev, main, master, "feature/**", "feature-*"]
  pull_request:
    branches: [dev, main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:54322/postgres
      DIRECT_URL: postgresql://postgres:postgres@localhost:54322/postgres
      NEXT_PUBLIC_SUPABASE_URL: http://localhost:54321
      NEXT_PUBLIC_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 23

      - name: Install JS dependencies
        working-directory: ./plant-care-assistant
        run: npm ci

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1

      - name: Start Supabase local
        working-directory: ./plant-care-assistant
        run: supabase start

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 54322 && exit 0
            sleep 2
          done
          echo "Postgres never became ready" && exit 1

      - name: Setup database with Prisma
        working-directory: ./plant-care-assistant
        run: |
          npx prisma generate
          npx prisma db push
          npx prisma db seed

      - name: Apply Supabase migrations
        working-directory: ./plant-care-assistant
        run: supabase db reset --local

      - name: Create test user
        working-directory: ./plant-care-assistant
        run: |
          curl -sSf -X POST 'http://localhost:54321/auth/v1/signup' \
            -H "apikey: $NEXT_PUBLIC_SUPABASE_ANON_KEY" \
            -H "Content-Type: application/json" \
            -d '{"email":"bradley.loizeau@gmail.com","password":"Password123","email_confirm":true}' \
            --fail || echo "User might already exist"

      - name: Install Playwright browsers
        working-directory: ./plant-care-assistant
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: ./plant-care-assistant
        run: npm run test:e2e

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: plant-care-assistant/playwright-report/
          retention-days: 30
