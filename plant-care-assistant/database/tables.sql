PRAGMA foreign_keys = ON;

-- Table USER
CREATE TABLE IF NOT EXISTS USER (
    user_id INTEGER PRIMARY KEY AUTOINCREMENT,
    username VARCHAR UNIQUE NOT NULL,
    email VARCHAR UNIQUE NOT NULL,
    password_hash VARCHAR NOT NULL,
    created_at DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATE,
    deleted_at DATE
);

-- Table PLANT_TYPE
CREATE TABLE IF NOT EXISTS PLANT_TYPE (
    plant_type_id INTEGER PRIMARY KEY AUTOINCREMENT,
    plant_type_name VARCHAR NOT NULL,
    created_at DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATE,
    deleted_at DATE
);

-- Table PLANT
CREATE TABLE IF NOT EXISTS PLANT (
    plant_id INTEGER PRIMARY KEY AUTOINCREMENT,
    plant_name VARCHAR NOT NULL,
    user_id INTEGER NOT NULL,
    plant_type_id INTEGER NOT NULL,
    photo VARCHAR NOT NULL,
    created_at DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATE,
    deleted_at DATE,
    FOREIGN KEY (user_id) REFERENCES USER(user_id) ON DELETE CASCADE,
    FOREIGN KEY (plant_type_id) REFERENCES PLANT_TYPE(plant_type_id) ON DELETE CASCADE
);

-- Table POST
CREATE TABLE IF NOT EXISTS POST (
    post_id INTEGER PRIMARY KEY AUTOINCREMENT,
    title VARCHAR NOT NULL,
    content VARCHAR NOT NULL,
    photo VARCHAR,
    user_id INTEGER NOT NULL,
    plant_id INTEGER NOT NULL,
    created_at DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATE,
    deleted_at DATE,
    FOREIGN KEY (user_id) REFERENCES USER(user_id) ON DELETE CASCADE,
    FOREIGN KEY (plant_id) REFERENCES PLANT(plant_id) ON DELETE CASCADE
);

-- Table COMMENT
CREATE TABLE IF NOT EXISTS COMMENT (
    comment_id INTEGER PRIMARY KEY AUTOINCREMENT,
    content VARCHAR NOT NULL,
    user_id INTEGER NOT NULL,
    post_id INTEGER NOT NULL,
    photo VARCHAR,
    created_at DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATE,
    deleted_at DATE,
    FOREIGN KEY (user_id) REFERENCES USER(user_id) ON DELETE CASCADE,
    FOREIGN KEY (post_id) REFERENCES POST(post_id) ON DELETE CASCADE
);

-- Table LIKE
CREATE TABLE IF NOT EXISTS LIKES (
    post_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    created_at DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at DATE,
    PRIMARY KEY (post_id, user_id),
    FOREIGN KEY (post_id) REFERENCES POST(post_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES USER(user_id) ON DELETE CASCADE
);

-- Table USER_PLANT
CREATE TABLE IF NOT EXISTS USER_PLANT (
    user_id INTEGER NOT NULL,
    plant_id INTEGER NOT NULL,
    PRIMARY KEY (user_id, plant_id),
    FOREIGN KEY (user_id) REFERENCES USER(user_id) ON DELETE CASCADE,
    FOREIGN KEY (plant_id) REFERENCES PLANT(plant_id) ON DELETE CASCADE
);

-- Table USERS_POST (pour la relation N:N entre USERS et POST)
CREATE TABLE IF NOT EXISTS USERS_POST (
    user_id INTEGER NOT NULL,
    post_id INTEGER NOT NULL,
    PRIMARY KEY (user_id, post_id),
    FOREIGN KEY (user_id) REFERENCES USER(user_id) ON DELETE CASCADE,
    FOREIGN KEY (post_id) REFERENCES POST(post_id) ON DELETE CASCADE
);
